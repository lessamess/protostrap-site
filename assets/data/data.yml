applicationKey: ProtostrapSite
application: "Protostrap Docs"
brand: Protostrap

protostrapVersion: "3.1"


news:
  1:
    title: "Log lady spotted without log"
    img: "logLady.png"
    date: ['parse','makeDateFromString', 'yesterday']
  2:
    title: "The owls are not what they seem"
    img: "owls.png"
    date: ['parse','makeDateFromString', '-5 days']

gettingStarted:
  requirements:
    title: "Requirements"
  webserver:
    title: "Installing a local webserver: MAMP"
  install:
    title: "Installing Protostrap"
  sublime:
    title: "Using Sublime"
    sub:
      packages:
        title: "Recommended Sublime Packages"
      pssnippets:
        title: "Protostrap snippets"
      keybindings:
        title: "Key bindings"
  # installScript:
  #   title: "Install Script"
  # update:
  #   title: "Updating Protostrap"


basics:
  elements:
    title: "Protostrap's Elements"
  filesAndFolders:
    title: "Files and Folders"
  fileStructure:
    title: "Default Filestructure"
  snippets:
    title: "Snippets"
  adminPanel:
    title: "The Admin Panel"

components:
  typeahead:
    title: "Twitter Typeahead"
    include: "typeahead"
  stepper:
    title: "Stepper"
    description: "Show the status of a process with a stepper."
    markup: |
      <div class="stepper">
        <!-- Stepper: Steps -->
        <ul class="steps">
          <li id="step-tab-1" data-target="#step1" class="active">
            <span id="badge1" class="label label-as-badge label-info">1</span>
            Step 1
            <span class="chevron"></span>
          </li>
          <li id="step-tab-2" data-target="#step2">
            <span id="badge2" class="label label-default label-as-badge">2</span>
            Step 2
            <span class="chevron"></span>
          </li>
          <li id="step-tab-3" data-target="#step3">
            <span id="badge3" class="label label-default label-as-badge">3</span>
            Step 3
            <span class="chevron"></span>
          </li>
          <li id="step-tab-4" data-target="#step4">
            <span id="badge4" class="label label-default label-as-badge">4</span>
            Step 4
            <span class="chevron"></span>
          </li>
        </ul>
        <!-- Stepper Content -->
        <div class="step-content">
          <!-- Step 1 -->
          <div class="step-pane step-pane-1 active" id="step1">
            <a class="btn btn-primary btn-next"
               data-nextid="2" type="button" href="javascript:void(0);">
               Next
            </a>
          </div>
          <!-- Step 2 -->
          <div class="step-pane step-pane-2 " id="step2">
            <a class="btn btn-default btn-prev "
               data-previd="1" type="button" href="javascript:void(0);">
               Previous
            </a>
            <a class="btn btn-primary btn-next"
               data-nextid="3" type="button" href="javascript:void(0);">
               Next
            </a>
          </div>
          <!-- Step 3 -->
          <div class="step-pane step-pane-3 " id="step3">
            <a class="btn btn-default btn-prev "
               data-previd="2" type="button" href="javascript:void(0);">
               Previous
            </a>
            <a class="btn btn-primary btn-next"
               data-nextid="4" type="button" href="javascript:void(0);">
               Next
            </a>
          </div>
          <!-- Step 4 -->
          <div class="step-pane step-pane-4 " id="step4">
            <a class="btn btn-default btn-prev "
               data-previd="3" type="button" href="javascript:void(0);">
               Previous
            </a>
          </div>

        </div>

    effect: |
      <div class="row">
        <div class="col-md-12">
          <h4>Stepper</h4>
          <div class="stepper">
            <ul class="steps">
              <li id="step-tab-1" data-target="#step1" class="active">
                <span id="badge1" class="label label-as-badge label-info">1</span> Step 1<span class="chevron"></span>
              </li>
              <li id="step-tab-2" data-target="#step2"><span id="badge2" class="label label-default label-as-badge">2</span> Step 2<span class="chevron"></span></li>
              <li id="step-tab-3" data-target="#step3"><span id="badge3" class="label label-default label-as-badge">3</span> Step 3<span class="chevron"></span></li>
              <li id="step-tab-4" data-target="#step4"><span id="badge4" class="label label-default label-as-badge">4</span> Step 4<span class="chevron"></span></li>
            </ul>
            <div class="step-content">
              <div class="step-pane step-pane-1 active" id="step1">
                <a class="btn btn-primary btn-next"
                   data-nextid="2" type="button" href="javascript:void(0);">
                   Next
                </a>
              </div>
              <div class="step-pane step-pane-2 " id="step2">
                <a class="btn btn-default btn-prev " data-previd="1" type="button" href="javascript:void(0);">Previous</a>
                <a class="btn btn-primary btn-next" data-nextid="3" type="button" href="javascript:void(0);">Next</a>
              </div>
              <div class="step-pane step-pane-3 " id="step3">
                <a class="btn btn-default btn-prev " data-previd="2" type="button" href="javascript:void(0);">Previous</a>
                <a class="btn btn-primary btn-next" data-nextid="4" type="button" href="javascript:void(0);">Next</a>
              </div>
              <div class="step-pane step-pane-4 " id="step4">
                <a class="btn btn-default btn-prev " data-previd="3" type="button" href="javascript:void(0);">Previous</a>
              </div>
            </div>
          </div>
        </div>
      </div>
  draggables:
    title: "Draggables"
    description: "Sort elements in a list or grid with drag and drop."
    markup: |
      <!-- Sortable List -->
      <ul class="list-group sortable list">
        <li class="list-group-item">1</li>
        <li class="list-group-item">2</li>
        <li class="list-group-item">3</li>
        <li class="list-group-item">4</li>
        <li class="list-group-item">5</li>
      </ul>

      <!-- Sortable Grid-->
      <ul class="list-group sortable grid">
        <li class="">1</li>
        <li class="">2</li>
        <li class="">3</li>
        <li class="">4</li>
        <li class="">5</li>
      </ul>
    effect: |
      <div class="row">
        <div class="col-md-6">
          <h4>Sortable List</h4>
          <ul class="list-group sortable list">
            <li class="list-group-item">1</li>
            <li class="list-group-item">2</li>
            <li class="list-group-item">3</li>
            <li class="list-group-item">4</li>
            <li class="list-group-item">5</li>
          </ul>
        </div>
        <div class="col-md-6">
          <h4>Sortable Grid</h4>
          <ul class="list-group sortable grid">
            <li class="">1</li>
            <li class="">2</li>
            <li class="">3</li>
            <li class="">4</li>
            <li class="">5</li>
          </ul>
        </div>
      </div>
  filterTable:
    title: "Table filtering & sorting"
    description: |
      Filtering tables is one of the most powerful patterns when dealing with large amounts of data. Protostrap lets you define input fields to filter the rows in a table. <br><br>
      In addition you can add sorting functionality.
    include: "filtertable"
  # spinner:
  #   title: "Spinner"
  #   description: "Display a spinner to indicate loading content."
  #   markup: |
  #     <div class="align-center">
  #       <i class="fa fa-spinner fa-pulse fa-spin fa-3x"></i>
  #     </div>
  #   effect: |
  #     <div class="row">
  #       <div class="col-md-6 align-center">
  #         <div class="card">
  #           <br>
  #           <i class="fa fa-spinner fa-pulse fa-spin fa-3x"></i>
  #           <br><br>
  #         </div>
  #       </div>
  #       <div class="col-md-6">
  #       </div>
  #     </div>
  cards:
    title: "Cards"
    description: "Cards are a useful design pattern for listing objects in a grid view. These are taken from the Bootstrap 4 alpha."
    markup: |
      <div class="card">
        <img class="card-img-top" src="..." alt="Card image cap">
        <div class="card-block">
          <h4 class="card-title">Card title</h4>
          <p class="card-text">A description of your card's content.</p>
        </div>
      </div>
    include: "card"

  cardbuttons:
    title: "Buttons on Card Images"
    description: |
      Place a button on your card image. addingButtons can contain any Font Awesome icons.
      <ul class="simpleList">
          <li>
              Adding the class <b>btn-togglePrimary</b> will toggle the button between Primary and Default style <br>
              The heart, star and user icons will also toggle between
              <i class="fa fa-heart-o"></i> outline and <i class="fa fa-heart"></i> filled versions. Other icons will stay the same.
          </li>
          <li>Adding the class <b>btn-circle-sm</b> will add a round button in a touchfriendly size</li>
          <li>Adding the class <b>btn-circle</b> will add a fairly big round button</li>
          <li>The buttons default position is in the top right corner. Adding one of the classes <b>topLeft</b>, <b>bottomLeft</b> or <b>bottomRight</b>, will move it to the respective corner</li>
      </ul>
    markup: |
      <div class="card">
          <div class="btn btn-default btn-togglePrimary btn-circle-sm btn-onCard">
              <i class="fa fa-heart-o"></i>
          </div>
          <img class="card-img-top" src="..." class="img-responsive" alt="Image cap">
          <div class="card-block">
              <h4 class="card-title">Card title</h4>
              <p class="card-text">A description of your card's content.</p>
          </div>
      </div>
    include: "cardbuttons"

  passwordToggle:
    title: "Toggle Password Visibility"
    description: "Display the entered password with a toggle."
    markup: |
      <div class="input-group">
          <input type="password" class="form-control" name="pw" placeholder="Password">
          <span class="input-group-addon passwordToggle">
               <i class="fa fa-square-o"></i> Show
          </span>
      </div>
    effect: |
      <div class="row">
          <div class="col-md-6">
            <div class="input-group">
              <input type="password" class="form-control" name="" placeholder="Password">
              <span class="input-group-addon passwordToggle"><i class="fa fa-square-o"></i> Show</span>
            </div>

          </div>
          <div class="col-md-6">

          </div>
      </div>
  fakeAuth:
    title: "Fake Authentication Layer"
    include: "fakeAuth"
    sub:
      loginsection:
        title: "Login"
      userVariables:
        title: "User Variables"
      logoutsection:
        title: "Logout"

  multilinguality:
    title: "Multilinguality"
    description: |
      Easily show translated content. Translations are handled in the file translations.yml located in the folder assets/data.
      The structure of the translations file is:
      <div class="micropadding"></div>
      <pre><code class="html">translations:
        thisIsAtest:             //  key
          en: This is a test     //  English Translation
          de: Das ist ein Test   //  German Translation</code></pre>
    markup: |
          Active Language: <?php echo __("thisIsAtest"); ?>
          English: <?php echo __("thisIsAtest","en"); ?>
          German: <?php echo __("thisIsAtest","de"); ?>
          French: <?php echo __("thisIsAtest","fr"); ?> (Not available, returns the key)
    include: "multilinguality"

  fakeGoogle:
    title: "Fake Google"
    include: "fakeGoogle"
  pageTransitions:
    title: "Page Transitions"
    include: "pageTransitions"
  # footer:
  #   title: "Default Footer"
  #   description: "Some functions come in handy at all times."
  #   markup: |
  #       <div class="flexbox">
  #         <div class="flex-1" >
  #           ©<?php echo date("Y") ;?> - Project Brand
  #           <a href="?session_renew=true"><i class="fa fa-refresh"></i></a>|
  #           <a href="javascript:void(0);" data-toggle="collapse" data-target="#collapse<?php echo getUniqueId();?>">Deeplink</a>|
  #           <div id="collapse<?php echo $lastUniqueId;?>" class="collapse">
  #             <input type="text" class="form-control selectOnClick" name="" placeholder="" value="<?php echo getDeeplink(); ;?>">
  #           </div>
  #         </div>
  #         <div class="flex-1 align-right" >
  #           <a href="http://protostrap.ch/start.php">Protostrap Documentation</a> &nbsp;&nbsp;
  #         </div>
  #       </div>
  #   include: "footer"


css:
  helperClasses:
    title: "Helper Classes"

cssClasses:
  simpleList:
    title: "Simple List"
    description: "A bullet point list with some margin between the entries"
    markup: |
      <ul class="simpleList">
          <li>one</li>
          <li>
              two with this. <br>
              And that
          </li>
          <li>three</li>
      </ul>
  micropadding:
    title: "Micropadding"
    description: "Sometimes you need a little more space between things. This inserts an 8px high space"
    markup: |
      <div class="micropadding"></div>
    effect: |
      <div class="flexbox padded">
          <div class="flex-1" >With a regular break:<br>Continue here</div>
          <div class="flex-1" >With Micropadding <div class="micropadding"></div>Continue here</div>
          <div class="flex-1" >With two breaks:<br><br>Continue here</div>
      </div>
  table-plain:
    title: "table-plain"
    description: "make plain table"
    markup: |
      <table class="table table-plain">
          <tr>
              <th>Name</th>
              <th>Price / Kg</th>
          </tr>
          <tr>
              <td>Apples</td>
              <td>3.10</td>
          </tr>
          <tr>
              <td>Bananas</td>
              <td>2.90</td>
          </tr>
      </table>
    effect: |
      <table class="table table-plain p50" >
          <tr>
              <th>Name</th>
              <th>Price / Kg</th>
          </tr>
          <tr>
              <td>Apples</td>
              <td>3.10</td>
          </tr>
          <tr>
              <td>Bananas</td>
              <td>2.90</td>
          </tr>
      </table>
  table-responsive:
    title: "Responsive Table"
    description: "This class can be added to a container for tables that are too wide for the viewport"
    markup: |
      <div class="table-responsive">
          <table>
            ... A table with many columns
          </table>
      </div>

  nopadding:
    title: ""
    description: ""
    markup: |
      <div class="nopadding"></div>
  nomargin:
    title: ""
    description: ""
    markup: |
      <div class="nomargin"></div>
  noborder:
    title: ""
    description: ""
    markup: |
      <div class="noborder"></div>
  oneliner:
    title: ""
    description: ""
    markup: |
      <div class="oneliner">A line of text that will be cut off when the end of the line is reached, you will see some ellipses instead of the line breaking. This is ideal for titles in cards or on mobile views</div>
  btn-circle:
    title: ""
    description: ""
    markup: |
      <div class="btn btn-primary btn-circle">
          <i class="fa fa-search"></i>
      </div>
    effect: |
      <div class="row">
          <div class="col-md-2 align-center">
              <div class="btn btn-primary btn-circle"><i class="fa fa-search"></i></div><br>
              btn-circle
          </div>
          <div class="col-md-3 align-center">
              <div class="btn btn-primary btn-circle-sm"><i class="fa fa-search"></i></div><br>
              <div class="micropadding"></div>
              btn-circle-sm
          </div>
      </div>
  btn-pile:
    title: "Button Pile "
    description: "Used to display a group of single toggle buttons as a pile instead of a row"
    markup: |
      <div class="btn-group toggleSinglePrimary btn-pile">
          <button class="btn btn-default">Left</button>
          <button class="btn btn-default">Middle</button>
          <button class="btn btn-default">Right</button>
          <button class="btn btn-default">Above</button>
          <button class="btn btn-default">Below</button>
          <button class="btn btn-default">Behind</button>
      </div>
    effect: |
      <div class="fix160">
        <div class="btn-group toggleSinglePrimary btn-pile">
            <button class="btn btn-default">Left</button>
            <button class="btn btn-default">Middle</button>
            <button class="btn btn-default">Right</button>
            <button class="btn btn-default">Above</button>
            <button class="btn btn-default">Below</button>
            <button class="btn btn-default">Behind</button>
        </div>
      </div>
  nomargin:
    title: ""
    description: ""
    markup: |
      <div class="nomargin"></div>

javascript:
  helperClasses:
    title: "Helper Classes"
  functions:
    title: "Function Reference"

jsHelperClasses:
  selectOnFocus:
    title: "Select on Focus"
  selectOnLoad:
    title: "Select on Load"
  toggleSinglePrimary:
    title: "Toggle Single Primary"
  toggleMultiPrimary:
    title: "Toggle Multi Primary"



php:
  functions:
    title: "Function Reference"
  variables:
    title: "Variables"

phpFunctions:
  getUniqueId:
    description: "Returns a number as a unique identifier. The id is incremented on each call. "
    parameters:
      variableName:
        description: "Variable name, when added the function will use the variable with the paramater's name as unique id variable. If the variable does not exist it will create one."
        type: "optional"

  yesterday:
    description: "Returns yesterday's date in the format specified in the config.yml file in the variable defaultPHPdateFormat (default d.m.Y)"
    parameters:
      format:
        description: |
          The formatting pattern for the date, corresponding to the <a href="http://php.net/manual/en/function.date.php">PHP format parameter strings</a>
        type: "optional"

  today:
    description: "Returns today's date in the format specified in the config.yml file in the variable defaultPHPdateFormat (default d.m.Y)"
    parameters:
      format:
        description: |
          The formatting pattern for the date, corresponding to the <a href="http://php.net/manual/en/function.date.php">PHP format parameter strings</a>
        type: "optional"

  tomorrow:
    description: "Returns tomorrow's date in the format specified in the config.yml file in the variable defaultPHPdateFormat (default d.m.Y)"
    parameters:
      format:
        description: |
          The formatting pattern for the date, corresponding to the <a href="http://php.net/manual/en/function.date.php">PHP format parameter strings</a>
        type: "optional"


  makeDateFromString:
    description: |
      Returns a date from almost any English textual datetime description. <br />
      Examples:
         <ul class="simpleList">
              <li>last Thursday</li>
              <li>first Monday of next Month</li>
              <li>-1 Week</li>
          </ul>
      The returned value is in the format specified in the config.yml file in the variable defaultPHPdateFormat (default d.m.Y) "
    parameters:
      string:
        description: "The textual daytime description"
        type: "mandatory"
      format:
        description: |
          The formatting pattern for the date, corresponding to the <a href="http://php.net/manual/en/function.date.php">PHP format parameter strings</a>
        type: "optional"

  getUniqueId2:
    description: ""
    parameters:
      variableName:
        description: ""
        type: "optional"
  forceLogin:
    description: "When called Protostrap will force the user to log into the prototype to access the page requested. Instead of the page requested Protostrap will show a login form if the user is not logged in, <br><br>The function is ideally called in the HTML before the &lt;body> tag"
  getFirstUserLogin:
    description: "Gets the email of the first user specified in the users array in the users.yml file. "
  setFromGet:
    description: ""
    parameters:
      variableName:
        description: ""
        type: "mandatory"
      defaultValue:
        description: ""
        type: "optional"
  reorder:
    description: "Reorders an array by the values of the specified key. Think of the Array as a table and each key as a column. Returns a reordered copy of the original array. "
    parameters:
      array:
        description: "The array to reorder"
        type: "mandatory"
      column:
        description: "The column or key by which the array is to be reordered"
        type: "mandatory"
      direction:
        description: "The direction in which the columns should be reordered. Defaults to ascending if none is provided. Possible values: <b>asc</b> and <b>desc</b>"
        type: "optional"
  __:
    description: "Returns the translation for the provided key. Returns the value of the key when no translation is found."
    parameters:
      key:
        description: "The key to translate"
        type: "mandatory"
      language:
        description: "The language the key is to be translated to. Defaults to the current active language of the prototype"
        type: "optional"

  alert:
    description: |
      Builds the HTML for a Bootstrap Alert.
      <br><div class="micropadding"></div>
      <div id="boxid" class="alert alert-info"><button class="close" data-dismiss="alert" type="button">×</button><ul class="fa-ul">
          <li style="width:96%">
            <i class="fa fa-info-circle fa-lg fa-li"></i>
            <b>This is an alert, in case you wondered</b><br>It has an icon and can contain a dismiss link
          </li>
        </ul>
      </div>
    parameters:
      text:
        description: "The text you want to display, can contain HTML"
        type: "mandatory"
      class:
        description: "The name of one of the Boostrap alert modifier classes: info, success, warning or danger. defaults to info if not provided"
        type: "optional"
      icon:
        description: |
          The name of the Font Awesome icon to be used for the alert. Defaults to a predefined icon for each modifier class: <br>
          <i class="fa fa-fw fa-info-circle"></i> info <br>
          <i class="fa fa-fw fa-check"></i> success <br>
          <i class="fa fa-fw fa-warning"></i> warning <br>
          <i class="fa fa-fw fa-bolt"></i> danger <br>
        type: "optional"
      id:
        description: "The id you want to give the alert. Defaults to <b>alertid</b>"
        type: "optional"
      dismiss:
        description: "Boolean value to make the alert dismissable. Defaults to <b>true</b>"
        type: "optional"

  showIf:
    description: "Will not output the class <b>hide</b> if the current user is in one of the specified usergroups"
    parameters:
      usergroups:
        description: "The name of the usergroups affected. Multiple groups can be specified as a comma-separated list: <b>admin, superadmin</b>"
        type: "mandatory"

  hideIf:
    description: "Will output the class <b>hide</b> if the current user is in one of the specified usergroups"
    parameters:
      usergroups:
        description: "The names of the usergroups affected. Multiple groups can be specified as a comma-separated list: <b>admin, superadmin</b>"
        type: "mandatory"

  includeIf:
    description: "Will include the specified file if the current user is in one of the specified usergroups"
    parameters:
      usergroups:
        description: "The names of the usergroups affected. Multiple groups can be specified as a comma-separated list: <b>admin, superadmin</b>"
        type: "mandatory"
      file:
        description: "The path to the file to be included."
        type: "mandatory"

  getDeeplink:
    description: "Returns the link to the current page including GET Parameters and automatic user login. <br><br>This is especially useful in a rolebased prototype. Deeplinks make it possible to view a page the way it was when the Deeplink was generated. This includes anything that refers to the current role. Deeplinks are great for documentation and specification in development, not forcing developers to log in as a the user of the userstory."

phpVariables:
  lastUniqueId:
    description: "Retruns the value assigned to it by calling the function getUniqueId()."
  currentYear:
    description: "Returns the current year as a four digit number"
  loggedIn:
    description: "Tells you if a user is logged in. Returns false if not."
  justloggedIn:
    description: "Tells you if a user just logged in. This variable returns true only on the page called by the form."
  activeUser:
    description: "An array of the current active user. Will show false if no user is logged in."
  username:
    description: "The active user's username"
  usermail:
    description: "The active user's email"
  userrole:
    description: "The active user's role"
  userpermissions:
    description: "An array of the permissions given to the user as defined in the users.yml file"

dataLayer:
  concept:
    title: "The Concept of Data in Protostrap"
    sub:
      types:
        title: "Types of data sources"
      session:
        title: "The Prototype Session"
      dataDirectory:
        title: "The data directory"
  textFiles:
    title: "Simple Data-Layer in Text Files"
    sub:
      dynamic:
        title: "Dynaic values"
      callingVariables:
        title: "Calling the variables in PHP"
  googleSpreadsheets:
    title: "Using Google Spreadsheets"
    sub:
      dynamicSpreadsheet:
        title: "Dynamic values in spreadsheets"
  changingData:
    title: "Changing Data"
  session:
    title: "The Prototype Session"

keyBindings:
  psbtn: "ctrl+b"
  icon: "ctrl+i"
  tabs: "ctrl+shift+t"
  pstable: "ctrl+t"
  row: "ctrl+r"
  coll: "ctrl+shift+c"
  php: "ctrl+shift+<"
  echo: "ctrl+e"
  foreach: "ctrl+f"
  vd: "ctrl+v"
  click: "ctrl+c"


showcases:
  1:
    title: "Ready-to-use extensions"
    gif: "assets/img/extensions.gif"
    bild: "assets/img/extensions.jpg"

  2:
    title: "Typeahead"
    gif: "assets/img/ps_typeahead.gif"
    bild: "assets/img/ps_typeahead.jpg"
  3:
    title: "Fake Authentication Layer"
    gif: "assets/img/ps_login.gif"
    bild: "assets/img/ps_login.jpg"
  4:
    title: "Dynamic data"
    gif: "assets/img/dynamicdata.gif"
    bild: "assets/img/dynamicdata.jpg"
  5:
    title: "Page Transitions, Mobile"
    gif: "assets/img/pagetransitions.gif"
    bild: "assets/img/pagetransitions.jpg"
  6:
    title: "Saved Data in a session"
    gif: "assets/img/searchhistory.gif"
    bild: "assets/img/searchhistory.jpg"



pluginsAndLibraries:
  1:
    title: "Twitter Bootstrap"
    link: http://getbootstrap.com
    text: "The most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web."
  2:
    title: "Tablesorter"
    link: http://getbootstrap.com
    text: "tablesorter is a jQuery plugin for turning a standard HTML table with THEAD and TBODY tags into a sortable table without page refreshes"
  3:
    title: "Bootstrap Select"
    link: http://getbootstrap.com
    text: "Bootstrap-select is a jQuery plugin that utilizes Bootstrap's dropdown.js to style and bring additional functionality to standard select elements."
  4:
    title: "Bootstrap Switch"
    link: http://getbootstrap.com
    text: "Mobile"
  5:
    title: "Boostrap Datepicker"
    link: http://getbootstrap.com
    text: "Mobile"
  6:
    title: "Twitter Typeahead Plugin"
    link: http://getbootstrap.com
    text: "typeahead.js is a fast and fully-featured autocomplete library."
  7:
    title: "jQuery Sortable Plugin"
    link: http://getbootstrap.com
    text: "Bootstrap-select is a jQuery plugin that utilizes Bootstrap's dropdown.js to style and bring additional functionality to standard select elements."
  8:
    title: "jQuery Hotkeys Plugin"
    link: http://getbootstrap.com
    text: "Mobile"
  9:
    title: "noUiSlider – A mobile friendly slider "
    link: https://refreshless.com/nouislider
    text: "noUiSlider is a free and lightweight JavaScript range slider with full touch support (iOS, Android, Windows 8)."

iconfonts:
  1:
    title: "Font Awesome"
    link: http://fontawesome.io/icons
    text: "Set of icons, specially designed for websites and applications. Compatible with screen readers, vectors, icons scale to any size."
  2:
    title: "Ionicons"
    link: http://ionicons.com
    text: "Ionicons is an open-sourced and MIT licensed icon pack."
contributors:
  1:
    name: "Heinz Müller"
    role: "Contributor"
    link: http://www.kraftheinzcompany.com
    twitter: HeinzKetchup_US


phpBasics:
  1:
    text: "Basic syntax: PHP Tags and output with <b>echo</b>"
    link: "http://php.net/manual/en/language.basic-syntax.phptags.php"
  2:
    text: "Variables: the most basic way to store values "
    link: ""
  3:
    text: "Arrays: variables that store multiple values. "
    link: ""
  4:
    text: "Conditionals: <b>if</b> and <b>else</b>"
    link: ""
  5:
    text: "Going through arrays with <b>foreach</b> loops"
    link: ""
  6:
    text: "How functions work"
    link: ""
  7:
    text: "Variable handling Functions, especially <b>empty()</b>, <b>isset()</b> and <b>vardump()</b>"
    link: ""
  8:
    text: "User-defined functions"
    link: "http://php.net/manual/en/functions.user-defined.php"

  9:
    text: "The predefined Variables <b>$_GET</b>, <b>$_POST</b> and <b>$_SESSION</b>"
    link: ""
  10:
    text: ""
    link: ""
